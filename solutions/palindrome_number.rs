// ============================================================================

struct Solution {
}

impl Solution {
    pub fn is_palindrome(x: i32) -> bool {
        if x < 0 {
            return false;
        }

        let mut x_ = x;
        let mut y = 0;
        while x_ > 0 {
            y = y * 10 + x_ % 10;
            x_ /= 10;
        }

        x == y
    }
}

// ============================================================================

fn main() {
}

// ============================================================================

#[test]
fn test_1() {
    assert!(Solution::is_palindrome(121));
}

// ============================================================================

#[test]
fn test_2() {
    assert!(!Solution::is_palindrome(-121));
}

// ============================================================================

#[test]
fn test_3() {
    assert!(!Solution::is_palindrome(10));
}

// ============================================================================

#[test]
fn test_4() {
    assert!(!Solution::is_palindrome(-101));
}
